#hive project
#create employee table and load its data
create table employee_data_hive(
Name string, second_name string, Job_Titles string,
 Department string, Full_or_Part_Time string, 
Salary_or_Hourly string, 
Typical_Hours int, Annual_Salary float, Hourly_Rate float) row format delimited fields terminated by ',' ;
load data local inpath '/home/osboxes/Downloads/employee-data.csv' into table employee_data_hive;
select * from employee_data_hive limit 5;


#create department table and load its data
create table department_data_hive(depart_name string, DeptID int) row format delimited fields terminated by ',' ;
load data local inpath '/home/osboxes/Downloads/Dept.txt' into table department_data_hive;
select * from department_data_hive limit 50;


#replace nulls in annual salary with Typical_Hours * Hourly_Rate * 52
Insert overwrite table employee_data_hive
Select Name, second_name, Job_Titles, Department, Full_or_Part_Time, Salary_or_Hourly, 
Typical_Hours, nvl(Annual_Salary, Typical_Hours * Hourly_Rate * 52 ) as Annual_Salary, Hourly_Rate from employee_data_hive;
Select * from employee_data_hive limit 50;



#replace department with deptid
Insert overwrite table employee_data_hive 
select a.name, a.second_name, a.job_titles, case when a.department == b.depart_name then b.DeptID end as department, a.full_or_part_time, a.salary_or_hourly, a.typical_hours, a.annual_salary, a.hourly_rate 
from employee_data_hive a join department_data_hive b on a.department=b.depart_name;


#salary > 100000
Select * from employee_data_hive limit where annual_salary > 100000;


#join and avg salary 
select b.depart_name, avg(a.annual_salary) from 
employee_data_hive a join department_data_hive b on a.department=b.DeptID
group by b.depart_name;


#create table partition by department
create table employees_ptn (
Name string,
second_name string,
Job_Titles string,
Full_or_Part_Time string,
Salary_or_Hourly string, 
Typical_Hours int,
Annual_Salary float,
Hourly_Rate float
)
partitioned by (department int) ;

#create 5 department
insert into table employees_ptn  partition(department = '1')
select Name, second_name, Job_Titles, Full_or_Part_Time, Salary_or_Hourly,Typical_Hours,Annual_Salary,Hourly_Rate from employee_data_hive where department='1';

insert into table employees_ptn  partition(department = '2')
select Name, second_name, Job_Titles, Full_or_Part_Time, Salary_or_Hourly,Typical_Hours,Annual_Salary,Hourly_Rate from employee_data_hive where department='2';

insert into table employees_ptn  partition(department = '3')
select Name, second_name, Job_Titles, Full_or_Part_Time, Salary_or_Hourly,Typical_Hours,Annual_Salary,Hourly_Rate from employee_data_hive where department='3';

insert into table employees_ptn  partition(department = '4')
select Name, second_name, Job_Titles, Full_or_Part_Time, Salary_or_Hourly,Typical_Hours,Annual_Salary,Hourly_Rate from employee_data_hive where department='4';

insert into table employees_ptn  partition(department = '5')
select Name, second_name, Job_Titles, Full_or_Part_Time, Salary_or_Hourly,Typical_Hours,Annual_Salary,Hourly_Rate from employee_data_hive where department='5';


#create dataframe in spark
hdfs dfs -copyFromLocal /home/osboxes/Downloads/employee-data.csv /user/osboxes/inputdata
spark-shell
var data = sc.textFile("/user/osboxes/inputdata/employee-data.csv")
var data1 = data.toDF()
data1.count()
data1.show(10)



#if we need to drop table to recreate it
DROP TABLE IF EXISTS department_data_hive;
DROP TABLE IF EXISTS employee_data_hive;
DROP TABLE IF EXISTS employees_ptn;


